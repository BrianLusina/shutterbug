from flask import Blueprint, make_response, json
from flask_restful import Api
from .user_api import ListUser, SingleUser


auth = Blueprint(name="auth", import_name=__name__, url_prefix="/api/auth", static_folder="static",
                 template_folder="templates")
authApi = Api(auth)

authApi.add_resource(ListUser, "/users")
authApi.add_resource(SingleUser, "/user/<int:user_id>")


@authApi.representation("application/json")
def output_json(data, code, headers=None):
    """
    This extends the Flask_RESTful api to allow adding json encoded data types using Flask json
    instead of the JSON from the Python standard library, a use case being the date time objects
    generated by the User Model class
    :param data: Data to return as a response
    :type data: dict

    :param code: The code response by the given route
    :type code: int

    :param headers: Headers to return in the response
    :type headers: dict

    :return: Returns a Flask Response object
    :rtype: Flask Response Object
    """
    response = make_response(json.dumps(data), code)
    response.headers.extend(headers or {})
    return response


from . import views
